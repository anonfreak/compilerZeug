SCANNER expr_scan PARSER expr_pars
IMPORT {
}

EXPORT {
}

GLOBAL {

#@ line 27 "expr.pars"

 # include <stdio.h>


#@ line 16 "expr_pars.lrk"
# ifdef CommonParsAttrs
typedef struct { CommonParsAttrs } yytCommonParsAttrs;
#  define yyCommon yytCommonParsAttrs Common;
#  define yyCommonParsAttrs CommonParsAttrs
# else
#  define yyCommon
#  define yyCommonParsAttrs
# endif


typedef union {
expr_scan_tScanAttribute Scan;
yyCommon
} tParsAttribute;
}

LOCAL {
}

BEGIN {
}

CLOSE {
}

TOKEN

string_const = 1
identifier = 2
int_const = 3
float_const = 4
'X' = 5
'BEGIN' = 6
'int' = 7
'float' = 8
'string' = 9
'=' = 10
'+' = 11
'-' = 12
'*' = 13
'/' = 14
'^' = 15
'(' = 16
')' = 17
';' = 18
'if' = 19
'<' = 20
'>' = 21
'!=' = 22
'then' = 23
'END' = 24
'else' = 25
'while' = 26
'for' = 27

OPER

LEFT  '+' '-'
LEFT  '*' '/'
RIGHT '^'
LEFT  UNARY

RULE

root : program .

#@ line 40 "expr.pars"
program : 'X' identifier 'BEGIN' declaration_l execution_l 'END' .

#@ line 45 "expr.pars"
typ : 'int' .
typ : 'float' .
typ : 'string' .

#@ line 51 "expr.pars"
declaration_l : declaration_l declaration ';' .
declaration_l : declaration ';' .
declaration_l : .

#@ line 57 "expr.pars"
declaration : typ identifier .
declaration : typ assignment .

#@ line 62 "expr.pars"
block : 'BEGIN' execution_l 'END' .

#@ line 66 "expr.pars"
execution_l : execution_l execution .
execution_l : execution .
execution_l : .

#@ line 72 "expr.pars"
execution : assignment ';' .
execution : stmt .

#@ line 77 "expr.pars"
stmt : 'if' '(' cond ')' 'then' block .
stmt : 'if' '(' cond ')' 'then' block 'else' block .
stmt : 'while' '(' cond ')' block .
stmt : 'for' '(' declaration ';' cond ';' assignment ')' block .

#@ line 84 "expr.pars"
cond : expr_string operator expr_string .

#@ line 88 "expr.pars"
operator : '<' .
operator : '>' .
operator : '=' .
operator : '!=' .

#@ line 96 "expr.pars"
assignment : identifier '=' expr_string .

#@ line 100 "expr.pars"
expr_string : expr_numbers .
expr_string : expr_string '+' expr_string .
expr_string : string_const .
expr_string : identifier .

#@ line 107 "expr.pars"
expr_numbers : expr_numbers '+' expr_numbers .

expr_numbers : expr_numbers '-' expr_numbers .

expr_numbers : expr_numbers '*' expr_numbers .

expr_numbers : expr_numbers '/' expr_numbers .

expr_numbers : expr_numbers '^' expr_numbers .

expr_numbers : '(' expr_numbers ')' .

expr_numbers : '-' expr_numbers PREC UNARY .

expr_numbers : '+' expr_numbers PREC UNARY .

expr_numbers : int_const .

expr_numbers : float_const .

expr_numbers : identifier .
