c
# ifndef CommonScanAttrs
# define CommonScanAttrs
# endif

# define zzCommonScanAttrs tPosition Position; CommonScanAttrs

typedef struct { zzCommonScanAttrs tIdent Value; } zz_expr_scan_string_const;
typedef struct { zzCommonScanAttrs tIdent Ident; } zz_expr_scan_identifier;
typedef struct { zzCommonScanAttrs long Value; } zz_expr_scan_int_const;
typedef struct { zzCommonScanAttrs double Value; } zz_expr_scan_float_const;

typedef union {
tPosition Position;
struct { zzCommonScanAttrs } Common;
zz_expr_scan_string_const string_const;
zz_expr_scan_identifier identifier;
zz_expr_scan_int_const int_const;
zz_expr_scan_float_const float_const;
} expr_scan_tScanAttribute;

# undef zzCommonScanAttrs

extern void expr_scan_ErrorAttribute ARGS((int Token, expr_scan_tScanAttribute * pAttribute));
%%
void expr_scan_ErrorAttribute
# ifdef HAVE_ARGS
 (int Token, expr_scan_tScanAttribute * pAttribute)
# else
 (Token, pAttribute) int Token; expr_scan_tScanAttribute * pAttribute;
# endif
{
 pAttribute->Position = expr_scan_Attribute.Position;
 switch (Token) {
 case /* string_const */ 1: 
pAttribute->string_const.Value = NoIdent;
 break;
 case /* identifier */ 2: 
pAttribute->identifier.Ident = NoIdent;
  break;
 case /* int_const */ 3: 
pAttribute->int_const.Value = 0;
   break;
 case /* float_const */ 4: 
pAttribute->float_const.Value = 0.0;
 break;
 }
}
%%
1 S string_const string_const
2 S identifier identifier
3 S int_const int_const
4 S float_const float_const
5 N yy63 'X'
6 N yy64 'BEGIN'
7 N yy65 'int'
8 N yy66 'float'
9 N yy67 'string'
10 N yy68 '='
11 N yy69 '+'
12 N yy70 '-'
13 N yy71 '*'
14 N yy72 '/'
15 N yy73 '^'
16 N yy74 '('
17 N yy75 ')'
18 N yy76 ';'
19 N yy77 'if'
20 N yy78 '<'
21 N yy79 '>'
22 N yy80 '!='
23 N yy81 'then'
24 N yy82 'END'
25 N yy83 'else'
26 N yy84 'while'
27 N yy85 'for'
