State    4 (   5): derivation trees
-----------------------------------

	shift reduce conflict implicitly repaired

.root _EOF_ 
.program 
 identifier.block_scoped 
 'begin'.block_exec 'end' 
.block_exec statement 
|  block_exec.statement 
| .assignment ';' 
| .identifier '=' computation 
.statement 
.

reduce   54  statement: . {identifier} ?

example   r  identifier begin .identifier = float_const ; end 

 ...
 'begin'.block_exec 'end' 
.statement 
.assignment ';' 
.identifier '=' computation 

shift    69  assignment: .identifier '=' computation ?

example   s  identifier begin .identifier = float_const ; end 

 ...
 'begin'.block_exec 'end' 
.block_exec statement 
|  block_exec.statement 
| .declaration ';' 
| .type identifier 
| .'int' 
.statement 
.

reduce   54  statement: . {'int'} ?

example   r  identifier begin .int identifier ; end 

 ...
 'begin'.block_exec 'end' 
.statement 
.declaration ';' 
.type identifier 
.'int' 

shift    63  type: .'int' ?

example   s  identifier begin .int identifier ; end 

 ...
 'begin'.block_exec 'end' 
.block_exec statement 
|  block_exec.statement 
| .declaration ';' 
| .type identifier 
| .'float' 
.statement 
.

reduce   54  statement: . {'float'} ?

example   r  identifier begin .float identifier ; end 

 ...
 'begin'.block_exec 'end' 
.statement 
.declaration ';' 
.type identifier 
.'float' 

shift    64  type: .'float' ?

example   s  identifier begin .float identifier ; end 

 ...
 'begin'.block_exec 'end' 
.block_exec statement 
|  block_exec.statement 
| .declaration ';' 
| .type identifier 
| .'string' 
.statement 
.

reduce   54  statement: . {'string'} ?

example   r  identifier begin .string identifier ; end 

 ...
 'begin'.block_exec 'end' 
.statement 
.declaration ';' 
.type identifier 
.'string' 

shift    65  type: .'string' ?

example   s  identifier begin .string identifier ; end 

 ...
 'begin'.block_exec 'end' 
.block_exec statement 
|  block_exec.statement 
| .keyword 
| .keyword_if 
| .'if' '(' condition ')' 'then' block_scoped keyword_elseif 
.statement 
.

reduce   54  statement: . {'if'} ?

example   r  identifier begin .if ( float_const != float_const ) then begin end end 

 ...
 'begin'.block_exec 'end' 
.statement 
.keyword 
.keyword_if 
.'if' '(' condition ')' 'then' block_scoped keyword_elseif 

shift   124  keyword_if: .'if' '(' condition ')' 'then' block_scoped keyword_elseif ?

example   s  identifier begin .if ( float_const != float_const ) then begin end end 

 ...
 'begin'.block_exec 'end' 
.block_exec statement 
|  block_exec.statement 
| .keyword 
| .keyword_while 
| .'while' '(' condition ')' block_scoped 
.statement 
.

reduce   54  statement: . {'while'} ?

example   r  identifier begin .while ( float_const != float_const ) begin end end 

 ...
 'begin'.block_exec 'end' 
.statement 
.keyword 
.keyword_while 
.'while' '(' condition ')' block_scoped 

shift   138  keyword_while: .'while' '(' condition ')' block_scoped ?

example   s  identifier begin .while ( float_const != float_const ) begin end end 

 ...
 'begin'.block_exec 'end' 
.block_exec statement 
|  block_exec.statement 
| .keyword 
| .keyword_for 
| .'for' '(' declaration ';' condition ';' assignment ')' block_scoped 
.statement 
.

reduce   54  statement: . {'for'} ?

example   r  identifier begin .for ( string identifier ; float_const != float_const ; identifier = float_const ) begin end end 

 ...
 'begin'.block_exec 'end' 
.statement 
.keyword 
.keyword_for 
.'for' '(' declaration ';' condition ';' assignment ')' block_scoped 

shift   142  keyword_for: .'for' '(' declaration ';' condition ';' assignment ')' block_scoped ?

example   s  identifier begin .for ( string identifier ; float_const != float_const ; identifier = float_const ) begin end end 

State    4 (   5): summary
--------------------------

ignore reduce   54  statement: . {identifier}
retain shift    69  assignment: .identifier '=' computation 

ignore reduce   54  statement: . {'int'}
retain shift    63  type: .'int' 

ignore reduce   54  statement: . {'float'}
retain shift    64  type: .'float' 

ignore reduce   54  statement: . {'string'}
retain shift    65  type: .'string' 

ignore reduce   54  statement: . {'if'}
retain shift   124  keyword_if: .'if' '(' condition ')' 'then' block_scoped keyword_elseif 

ignore reduce   54  statement: . {'while'}
retain shift   138  keyword_while: .'while' '(' condition ')' block_scoped 

ignore reduce   54  statement: . {'for'}
retain shift   142  keyword_for: .'for' '(' declaration ';' condition ';' assignment ')' block_scoped 

State    9 (  14): derivation trees
-----------------------------------

	shift reduce conflict implicitly repaired

.root _EOF_ 
.program 
 identifier.block_scoped 
 'begin'.block_exec 'end' 
.block_exec statement 
|  block_exec.statement 
| .assignment ';' 
| .identifier '=' computation 
 block_exec.statement 
.

reduce   54  statement: . {identifier} ?

example   r  identifier begin .identifier = float_const ; end 

 ...
 'begin'.block_exec 'end' 
.statement 
.assignment ';' 
.identifier '=' computation 

shift    69  assignment: .identifier '=' computation ?

example   s  identifier begin .identifier = float_const ; end 

 ...
 'begin'.block_exec 'end' 
.block_exec statement 
|  block_exec.statement 
| .declaration ';' 
| .type identifier 
| .'int' 
 block_exec.statement 
.

reduce   54  statement: . {'int'} ?

example   r  identifier begin .int identifier ; end 

 ...
 'begin'.block_exec 'end' 
.statement 
.declaration ';' 
.type identifier 
.'int' 

shift    63  type: .'int' ?

example   s  identifier begin .int identifier ; end 

 ...
 'begin'.block_exec 'end' 
.block_exec statement 
|  block_exec.statement 
| .declaration ';' 
| .type identifier 
| .'float' 
 block_exec.statement 
.

reduce   54  statement: . {'float'} ?

example   r  identifier begin .float identifier ; end 

 ...
 'begin'.block_exec 'end' 
.statement 
.declaration ';' 
.type identifier 
.'float' 

shift    64  type: .'float' ?

example   s  identifier begin .float identifier ; end 

 ...
 'begin'.block_exec 'end' 
.block_exec statement 
|  block_exec.statement 
| .declaration ';' 
| .type identifier 
| .'string' 
 block_exec.statement 
.

reduce   54  statement: . {'string'} ?

example   r  identifier begin .string identifier ; end 

 ...
 'begin'.block_exec 'end' 
.statement 
.declaration ';' 
.type identifier 
.'string' 

shift    65  type: .'string' ?

example   s  identifier begin .string identifier ; end 

 ...
 'begin'.block_exec 'end' 
.block_exec statement 
|  block_exec.statement 
| .keyword 
| .keyword_if 
| .'if' '(' condition ')' 'then' block_scoped keyword_elseif 
 block_exec.statement 
.

reduce   54  statement: . {'if'} ?

example   r  identifier begin .if ( float_const != float_const ) then begin end end 

 ...
 'begin'.block_exec 'end' 
.statement 
.keyword 
.keyword_if 
.'if' '(' condition ')' 'then' block_scoped keyword_elseif 

shift   124  keyword_if: .'if' '(' condition ')' 'then' block_scoped keyword_elseif ?

example   s  identifier begin .if ( float_const != float_const ) then begin end end 

 ...
 'begin'.block_exec 'end' 
.block_exec statement 
|  block_exec.statement 
| .keyword 
| .keyword_while 
| .'while' '(' condition ')' block_scoped 
 block_exec.statement 
.

reduce   54  statement: . {'while'} ?

example   r  identifier begin .while ( float_const != float_const ) begin end end 

 ...
 'begin'.block_exec 'end' 
.statement 
.keyword 
.keyword_while 
.'while' '(' condition ')' block_scoped 

shift   138  keyword_while: .'while' '(' condition ')' block_scoped ?

example   s  identifier begin .while ( float_const != float_const ) begin end end 

 ...
 'begin'.block_exec 'end' 
.block_exec statement 
|  block_exec.statement 
| .keyword 
| .keyword_for 
| .'for' '(' declaration ';' condition ';' assignment ')' block_scoped 
 block_exec.statement 
.

reduce   54  statement: . {'for'} ?

example   r  identifier begin .for ( string identifier ; float_const != float_const ; identifier = float_const ) begin end end 

 ...
 'begin'.block_exec 'end' 
.statement 
.keyword 
.keyword_for 
.'for' '(' declaration ';' condition ';' assignment ')' block_scoped 

shift   142  keyword_for: .'for' '(' declaration ';' condition ';' assignment ')' block_scoped ?

example   s  identifier begin .for ( string identifier ; float_const != float_const ; identifier = float_const ) begin end end 

 ...
 identifier.block_scoped 
 'begin' block_exec.'end' 

shift    42  block_scoped:  'begin' block_exec.'end' ?

example   s  identifier begin .end 

 ...
 identifier.block_scoped 
 'begin'.block_exec 'end' 
|  'begin' block_exec.'end' 
 block_exec.statement 
.

reduce   54  statement: . {'end'} ?

example   r  identifier begin .end 

State    9 (  14): summary
--------------------------

ignore reduce   54  statement: . {identifier}
retain shift    69  assignment: .identifier '=' computation 

ignore reduce   54  statement: . {'int'}
retain shift    63  type: .'int' 

ignore reduce   54  statement: . {'float'}
retain shift    64  type: .'float' 

ignore reduce   54  statement: . {'string'}
retain shift    65  type: .'string' 

ignore reduce   54  statement: . {'if'}
retain shift   124  keyword_if: .'if' '(' condition ')' 'then' block_scoped keyword_elseif 

ignore reduce   54  statement: . {'while'}
retain shift   138  keyword_while: .'while' '(' condition ')' block_scoped 

ignore reduce   54  statement: . {'for'}
retain shift   142  keyword_for: .'for' '(' declaration ';' condition ';' assignment ')' block_scoped 

retain shift    42  block_scoped:  'begin' block_exec.'end' 
ignore reduce   54  statement: . {'end'}

