###############################################################################
# Project:  Vorlesung Übersetzerbau
# Descr:    Definition und Aufbau eines AST mittels C
# Kind:     README
# Author:   Prof. Dr. Juergen Vollmer <vollmer@dhbw-karlsruhe.de>
# $Id: README,v 1.4 2010/04/23 21:31:17 vollmer Exp $
###############################################################################

Diese Verzeichnis enthält die Typ- und Funktionsdefinitionen für den
eines abstrakten Syntaxbaumes, implmentiert in C.

Die Dateien:
   tree.[ch]            Typdefinitionen und Konstruktoren
   write.[ch]		Ausgabe des Baumes
   eval.[ch]		Auswrtung des Baumes
   main.c		Hauptprogramm
   Makefile
   README


Aufgaben:
   - Ergänzen Sie die Definitionen um den unären Ausdruck (unary_expr)
     mit "+" und "-" als Operator.
   - Egänzen Sie den binären Operator um die Vergleichsoperatoren "<" und "=".
   - Ergänzen Sie die Definitionen um den bedingtem Ausdruck (cond_expr)
     	      condition ? then-expr : else-expr
     Wobei "false" durch 0.0 dargestellt werden soll und "true" durch einen
     Wert != 0.0
   - Implementieren Sie eine Funktion "eval()", welche einen Ausdruck
     auswertet.
   - Implementieren Sie Listen von Ausdrücke.
   - Implementieren Sie eine Funktion write_and_eval() für Listen von Ausdrücken.
   - Implementieren die Funktion reverse(), welche eine Liste "umdreht".
